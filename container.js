class ContainerTool {
    constructor({ data, api, config, block }) {
        this.data = data || { 
            text: '',
            background: 'white',
            collapsible: false,
            collapsed: false
        };
        this.api = api;
        this.config = config;
        this.block = block; // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –±–ª–æ–∫
        this.container = null;
        this.textElement = null;
        this.isEditMode = !this.data.text; // –†–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –Ω–æ–≤—ã—Ö –±–ª–æ–∫–æ–≤
        this.blockId = null; // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –±–ª–æ–∫–∞
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    save() {
        return {
            text: this.textElement ? this.textElement.textContent : this.data.text,
            background: this.data.background || 'white',
            collapsible: this.data.collapsible || false,
            collapsed: this.data.collapsed || false,
            blockId: this.blockId // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –±–ª–æ–∫–∞
        };
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    validate(savedData) {
        return savedData.text && savedData.text.trim().length > 0;
    }

    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—á–∏—Å—Ç–∫–∏ –æ—Ç –æ–ø–∞—Å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    static get sanitize() {
        return {
            text: false,
            background: false,
            collapsible: false,
            collapsed: false,
            blockId: false
        };
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Toolbox
    static get toolbox() {
        return {
            title: '–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä',
            icon: '<svg width="17" height="15" viewBox="0 0 17 15" xmlns="http://www.w3.org/2000/svg"><rect x="1" y="1" width="15" height="13" rx="2" stroke="currentColor" stroke-width="2" fill="none"/><rect x="3" y="3" width="11" height="3" rx="1" fill="currentColor"/><rect x="3" y="8" width="8" height="1" fill="currentColor"/><rect x="3" y="10" width="6" height="1" fill="currentColor"/></svg>'
        };
    }

    // –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
    render() {
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è –±–ª–æ–∫–∞
        this.blockId = this.data.blockId || `container-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;
        
        this.container = document.createElement('div');
        this.container.className = 'container-tool';
        this.container.setAttribute('data-container-id', this.blockId);

        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
        this.addStyles();

        // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        const controlsContainer = document.createElement('div');
        controlsContainer.className = 'container-controls';

        // –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ñ–æ–Ω–∞
        const backgroundContainer = document.createElement('div');
        backgroundContainer.className = 'container-background-controls';

        const whiteButton = document.createElement('button');
        whiteButton.innerText = '‚ö™ –ë–µ–ª—ã–π';
        whiteButton.className = 'container-btn container-btn-bg';
        whiteButton.addEventListener('click', () => {
            this.setBackground('white');
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
            setTimeout(() => {
                if (typeof window.updateContainerStyles === 'function') {
                    window.updateContainerStyles();
                }
            }, 50);
        });

        const grayButton = document.createElement('button');
        grayButton.innerText = '‚ö´ –°–µ—Ä—ã–π';
        grayButton.className = 'container-btn container-btn-bg';
        grayButton.addEventListener('click', () => {
            this.setBackground('gray');
            setTimeout(() => {
                if (typeof window.updateContainerStyles === 'function') {
                    window.updateContainerStyles();
                }
            }, 50);
        });

        const blueButton = document.createElement('button');
        blueButton.innerText = 'üîµ –ì–æ–ª—É–±–æ–π';
        blueButton.className = 'container-btn container-btn-bg';
        blueButton.addEventListener('click', () => {
            this.setBackground('blue');
            setTimeout(() => {
                if (typeof window.updateContainerStyles === 'function') {
                    window.updateContainerStyles();
                }
            }, 50);
        });

        backgroundContainer.appendChild(whiteButton);
        backgroundContainer.appendChild(grayButton);
        backgroundContainer.appendChild(blueButton);

        // –ö–Ω–æ–ø–∫–∞ —Å–∫—Ä—ã–≤–∞–µ–º–æ—Å—Ç–∏
        this.collapsibleButton = document.createElement('button');
        this.collapsibleButton.innerText = this.data.collapsible ? '‚úÖ –°–∫—Ä—ã–≤–∞–µ–º—ã–π' : '‚ùå –ù–µ —Å–∫—Ä—ã–≤–∞–µ–º—ã–π';
        this.collapsibleButton.className = 'container-btn container-btn-collapsible';
        this.collapsibleButton.addEventListener('click', () => {
            this.toggleCollapsible();
            setTimeout(() => {
                if (typeof window.updateContainerStyles === 'function') {
                    window.updateContainerStyles();
                }
            }, 50);
        });

        // –ö–Ω–æ–ø–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        this.saveButton = document.createElement('button');
        this.saveButton.innerText = '–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ';
        this.saveButton.className = 'container-btn container-btn-save';
        this.saveButton.addEventListener('click', () => this.finishEditing());

        // –ö–Ω–æ–ø–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        this.editButton = document.createElement('button');
        this.editButton.innerText = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å';
        this.editButton.className = 'container-btn container-btn-edit';
        this.editButton.addEventListener('click', () => this.startEditing());

        controlsContainer.appendChild(backgroundContainer);
        controlsContainer.appendChild(this.collapsibleButton);
        controlsContainer.appendChild(this.saveButton);

        // –ó–∞–≥–æ–ª–æ–≤–æ–∫ H1
        this.textElement = document.createElement('h1');
        this.textElement.className = 'container-title';
        this.textElement.contentEditable = true;
        this.textElement.textContent = this.data.text || '–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏';
        this.textElement.addEventListener('input', () => {
            this.data.text = this.textElement.textContent;
        });

        // –ö–Ω–æ–ø–∫–∞ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Ç–æ–ª—å–∫–æ –≤ —Ä–µ–∂–∏–º–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞)
        this.collapseToggle = document.createElement('button');
        this.collapseToggle.className = 'container-collapse-toggle';
        this.collapseToggle.innerHTML = this.data.collapsed ? '‚ñ∂Ô∏è' : '‚ñºÔ∏è';
        this.collapseToggle.style.display = 'none';
        this.collapseToggle.addEventListener('click', () => {
            this.toggleCollapsed();
            setTimeout(() => {
                if (typeof window.updateContainerStyles === 'function') {
                    window.updateContainerStyles();
                }
            }, 50);
        });

        // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å –∫–Ω–æ–ø–∫–æ–π —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è
        const titleContainer = document.createElement('div');
        titleContainer.className = 'container-title-wrapper';
        titleContainer.appendChild(this.textElement);
        titleContainer.appendChild(this.collapseToggle);

        // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        this.updateBackgroundButtons();
        this.applyContainerSettings();

        this.container.appendChild(controlsContainer);
        this.container.appendChild(titleContainer);
        this.container.appendChild(this.editButton); // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ä–µ–∂–∏–º
        if (!this.isEditMode) {
            this.finishEditing();
        } else {
            this.startEditing();
        }

        return this.container;
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ CSS —Å—Ç–∏–ª–µ–π
    addStyles() {
        if (!document.querySelector('#container-tool-styles')) {
            const style = document.createElement('style');
            style.id = 'container-tool-styles';
            style.textContent = `
                .container-tool {
                    border: 2px solid #4f8bd6;
                    border-radius: 12px;
                    padding: 20px;
                    margin: 20px 0;
                    background: white;
                    position: relative;
                }

                .container-tool.read-only {
                    border: none;
                    border-radius: 0;
                    padding: 20px;
                    margin: 20px 0;
                }

                .container-tool.read-only .container-controls {
                    display: none;
                }

                .container-tool:hover .container-btn-edit {
                    opacity: 1;
                    visibility: visible;
                }

                .container-tool:not(.read-only) .container-btn-edit {
                    display: none;
                }

                .container-controls {
                    display: flex;
                    gap: 10px;
                    margin-bottom: 15px;
                    align-items: center;
                    flex-wrap: wrap;
                    padding: 10px;
                    background: #f8f9fa;
                    border-radius: 8px;
                    position: relative;
                }

                .container-background-controls {
                    display: flex;
                    gap: 5px;
                }

                .container-btn {
                    padding: 8px 12px;
                    border: none;
                    border-radius: 6px;
                    font-size: 12px;
                    font-weight: 500;
                    cursor: pointer;
                    transition: all 0.2s;
                }

                .container-btn-bg {
                    background-color: #e9ecef;
                    color: #333;
                }

                .container-btn-bg.active {
                    background-color: #4f8bd6;
                    color: white;
                    transform: scale(1.05);
                }

                .container-btn-bg:hover {
                    transform: translateY(-1px);
                }

                .container-btn-collapsible {
                    background-color: #6c757d;
                    color: white;
                }

                .container-btn-collapsible:hover {
                    background-color: #5a6268;
                }

                .container-btn-save {
                    background-color: #28a745;
                    color: white;
                }

                .container-btn-save:hover {
                    background-color: #218838;
                }

                .container-btn-edit {
                    background-color: #007bff;
                    color: white;
                    position: absolute;
                    top: 5px;
                    right: 5px;
                    opacity: 0;
                    visibility: hidden;
                    transition: opacity 0.2s ease, visibility 0.2s ease;
                    z-index: 10;
                    padding: 4px 8px;
                    font-size: 10px;
                    border-radius: 3px;
                    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
                    border: none;
                    cursor: pointer;
                    height: auto;
                    line-height: 1.2;
                }

                .container-btn-edit:hover {
                    background-color: #0056b3;
                    transform: translateY(-1px);
                }

                .container-title-wrapper {
                    display: flex;
                    align-items: center;
                    gap: 10px;
                }

                .container-title {
                    margin: 0;
                    flex: 1;
                    font-size: 24px;
                    font-weight: bold;
                    color: #333;
                    outline: none;
                    border: none;
                    background: transparent;
                }

                .container-title:focus {
                    background-color: rgba(79, 139, 214, 0.1);
                    border-radius: 4px;
                    padding: 4px 8px;
                }

                .container-collapse-toggle {
                    background: none;
                    border: none;
                    font-size: 16px;
                    cursor: pointer;
                    padding: 4px;
                    border-radius: 4px;
                    transition: background-color 0.2s;
                }

                .container-collapse-toggle:hover {
                    background-color: rgba(0, 0, 0, 0.1);
                }

                .container-tool.read-only {
                    border-color: #dee2e6;
                }

                .container-tool.read-only .container-title {
                    cursor: default;
                }

                /* –°—Ç–∏–ª–∏ –¥–ª—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ –±–ª–æ–∫–æ–≤ –ø–æ ID –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ */
                .container-styled-block {
                    transition: all 0.3s ease;
                    border-left: 4px solid transparent;
                    padding: 10px 16px;
                    margin: 0;
                    position: relative;
                    overflow: hidden;
                }

                .container-styled-block::before {
                    content: '';
                    position: absolute;
                    top: 0;
                    left: 0;
                    bottom: 0;
                    right: 40px;
                    z-index: -1;
                    pointer-events: none;
                }

                .container-styled-block.white-theme {
                    border-left-color: #4f8bd6;
                }

                .container-styled-block.white-theme::before {
                    background-color: #ffffff;
                }

                .container-styled-block.gray-theme {
                    border-left-color: #6c757d;
                }

                .container-styled-block.gray-theme::before {
                    background-color: #f8f9fa;
                }

                .container-styled-block.blue-theme {
                    border-left-color: #2196f3;
                }

                .container-styled-block.blue-theme::before {
                    background-color: #e3f2fd;
                }

                /* –°—Ç–∏–ª–∏ –¥–ª—è —Å–∞–º–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å —Ñ–æ–Ω–æ–º */
                .container-tool.container-bg-white {
                    background-color: #ffffff;
                    border-left: 4px solid #4f8bd6;
                }

                .container-tool.container-bg-gray {
                    background-color: #f8f9fa;
                    border-left: 4px solid #6c757d;
                }

                .container-tool.container-bg-blue {
                    background-color: #e3f2fd;
                    border-left: 4px solid #2196f3;
                }

                /* –°–∫—Ä—ã—Ç–∏–µ –±–ª–æ–∫–æ–≤ –¥–ª—è —Å–≤–µ—Ä–Ω—É—Ç—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ */
                .container-styled-block.collapsed {
                    display: none;
                }
            `;
            document.head.appendChild(style);
        }
    }

    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–æ–Ω–∞
    setBackground(background) {
        this.data.background = background;
        this.updateBackgroundButtons();
        this.applyContainerSettings();
    }

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–∫—Ä—ã—Ç–∏—è
    toggleCollapsible() {
        this.data.collapsible = !this.data.collapsible;
        this.collapsibleButton.innerText = this.data.collapsible ? '‚úÖ –°–∫—Ä—ã–≤–∞–µ–º—ã–π' : '‚ùå –ù–µ —Å–∫—Ä—ã–≤–∞–µ–º—ã–π';
        this.applyContainerSettings();
    }

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∫—Ä—ã—Ç–∏—è
    toggleCollapsed() {
        this.data.collapsed = !this.data.collapsed;
        this.collapseToggle.innerHTML = this.data.collapsed ? '‚ñ∂Ô∏è' : '‚ñºÔ∏è';
        this.applyContainerSettings();
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–æ–∫ —Ñ–æ–Ω–∞
    updateBackgroundButtons() {
        const buttons = this.container.querySelectorAll('.container-btn-bg');
        buttons.forEach(button => button.classList.remove('active'));

        const currentBg = this.data.background || 'white';
        const activeButton = Array.from(buttons).find(btn => {
            if (currentBg === 'white' && btn.innerText.includes('–ë–µ–ª—ã–π')) return true;
            if (currentBg === 'gray' && btn.innerText.includes('–°–µ—Ä—ã–π')) return true;
            if (currentBg === 'blue' && btn.innerText.includes('–ì–æ–ª—É–±–æ–π')) return true;
            return false;
        });

        if (activeButton) {
            activeButton.classList.add('active');
        }
    }

    // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–æ–Ω—Ç–∞–π–Ω–µ—Ä–∞
    applyContainerSettings() {
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º data-–∞—Ç—Ä–∏–±—É—Ç—ã –Ω–∞ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –±–ª–æ–∫ Editor.js
        const editorBlock = this.container.closest('.ce-block');
        if (editorBlock) {
            editorBlock.setAttribute('data-container-bg', this.data.background || 'white');
            editorBlock.setAttribute('data-container-collapsed', this.data.collapsed ? 'true' : 'false');
            editorBlock.setAttribute('data-container-id', this.blockId);
        }

        // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–æ–Ω –∫ —Å–∞–º–æ–º—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É
        this.container.classList.remove('container-bg-white', 'container-bg-gray', 'container-bg-blue');
        this.container.classList.add(`container-bg-${this.data.background || 'white'}`);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º/—Å–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        if (this.data.collapsible && !this.isEditMode) {
            this.collapseToggle.style.display = 'block';
        } else {
            this.collapseToggle.style.display = 'none';
        }

        // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ –∫ –ø–æ—Å–ª–µ–¥—É—é—â–∏–º –±–ª–æ–∫–∞–º
        this.styleFollowingBlocks();
    }

    // –ù–æ–≤—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏ –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –±–ª–æ–∫–æ–≤
    styleFollowingBlocks() {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∏–ª–µ–π, –µ—Å–ª–∏ –æ–Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–∞
        if (typeof window.updateContainerStyles === 'function') {
            setTimeout(() => window.updateContainerStyles(), 10);
            return;
        }
        
        // Fallback –¥–ª—è —Å–ª—É—á–∞–µ–≤, –∫–æ–≥–¥–∞ –≥–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞
        if (!this.api || !this.api.blocks) return;

        const currentBlockIndex = this.api.blocks.getCurrentBlockIndex();
        const allBlocks = this.api.blocks.getBlocksCount();
        
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è —ç—Ç–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
        this.removeContainerStyles();
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ –∫ –±–ª–æ–∫–∞–º –ø–æ—Å–ª–µ —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
        for (let i = currentBlockIndex + 1; i < allBlocks; i++) {
            const blockElement = this.getBlockElementByIndex(i);
            if (!blockElement) continue;
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ—Ç –±–ª–æ–∫ –¥—Ä—É–≥–∏–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º
            if (this.isContainerBlock(blockElement)) {
                break; // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è, –µ—Å–ª–∏ –≤—Å—Ç—Ä–µ—Ç–∏–ª–∏ –¥—Ä—É–≥–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            }
            
            // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏
            this.applyStylesToBlock(blockElement);
        }
    }

    // –ü–æ–ª—É—á–∏—Ç—å DOM —ç–ª–µ–º–µ–Ω—Ç –±–ª–æ–∫–∞ –ø–æ –∏–Ω–¥–µ–∫—Å—É
    getBlockElementByIndex(index) {
        try {
            const block = this.api.blocks.getBlockByIndex(index);
            if (block && block.holder) {
                return block.holder;
            }
        } catch (e) {
            console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –±–ª–æ–∫ –ø–æ –∏–Ω–¥–µ–∫—Å—É:', index, e);
        }
        return null;
    }

    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –±–ª–æ–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º
    isContainerBlock(blockElement) {
        return blockElement.querySelector('.container-tool') !== null ||
               blockElement.getAttribute('data-container-id') !== null;
    }

    // –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Å—Ç–∏–ª–∏ –∫ –±–ª–æ–∫—É
    applyStylesToBlock(blockElement) {
        if (!blockElement) return;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â–∏–π –∫–ª–∞—Å—Å –∏ –∫–ª–∞—Å—Å —Ç–µ–º—ã
        blockElement.classList.add('container-styled-block');
        blockElement.classList.add(`${this.data.background}-theme`);
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞—Ç—Ä–∏–±—É—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º
        blockElement.setAttribute('data-styled-by-container', this.blockId);
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è
        if (this.data.collapsed) {
            blockElement.classList.add('collapsed');
        } else {
            blockElement.classList.remove('collapsed');
        }
    }

    // –£–¥–∞–ª–∏—Ç—å —Å—Ç–∏–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    removeContainerStyles() {
        const styledBlocks = document.querySelectorAll(`[data-styled-by-container="${this.blockId}"]`);
        styledBlocks.forEach(block => {
            block.classList.remove('container-styled-block', 'white-theme', 'gray-theme', 'blue-theme', 'collapsed');
            block.removeAttribute('data-styled-by-container');
        });
    }

    // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    finishEditing() {
        this.isEditMode = false;
        this.container.classList.add('read-only');

        // –û—Ç–∫–ª—é—á–∞–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞
        this.textElement.contentEditable = false;

        // –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è
        this.applyContainerSettings();
    }

    // –ù–∞—á–∞–ª–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    startEditing() {
        this.isEditMode = true;
        this.container.classList.remove('read-only');

        // –í–∫–ª—é—á–∞–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞
        this.textElement.contentEditable = true;

        // –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –∫–Ω–æ–ø–∫–∏ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        this.applyContainerSettings();
    }

    // –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–ª–æ–∫–∞ –∏–∑ JSON –¥–∞–Ω–Ω—ã—Ö
    static get conversionConfig() {
        return {
            import: 'text',
            export: 'text'
        };
    }

    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Å—Ç–∞–≤–∫–∏
    static get pasteConfig() {
        return {
            tags: ['H1']
        };
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å—Ç–∞–≤–∫–∏
    onPaste(event) {
        const content = event.detail.data;
        this.data.text = content.textContent || content.innerHTML || '';
        if (this.textElement) {
            this.textElement.textContent = this.data.text;
        }
    }

    // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –±–ª–æ–∫–∞
    destroy() {
        this.removeContainerStyles();
    }
}

// –î–µ–ª–∞–µ–º –∫–ª–∞—Å—Å –¥–æ—Å—Ç—É–ø–Ω—ã–º –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞
if (typeof window !== 'undefined') {
    window.ContainerTool = ContainerTool;
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–∞—Ö
if (typeof module !== 'undefined' && module.exports) {
    module.exports = { ContainerTool };
}
